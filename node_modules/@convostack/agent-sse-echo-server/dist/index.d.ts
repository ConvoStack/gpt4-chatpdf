import express from 'express';

/**
 * echoHandler provides an express handler that will echo the agent input back as a server-side events stream.
 * This route is compatible with the agent-sse library. This route requires the express.json() (or similar) middleware
 * to ensure that the JSON request body is parsed into an object. Use this if you want to run an echo server on an existing Express app.
 *
 * @param req - Express Request
 * @param res - Express Response
 *
 * @example
 * ```
 * app.post('/api/chat', express.json(), echoHandler);
 * ```
 */
declare const sseEchoHandler: (req: express.Request, res: express.Response) => void;
/**
 * serveDev provides an express handler that will echo the agent input back as a server-side events stream.
 * This route is compatible with the agent-sse library. This route requires the express.json() (or similar) middleware
 * to ensure that the JSON request body is parsed into an object. Use this if you want to run an echo server on an existing Express app.
 *
 * @param port - Port to run the Express app on
 * @param host - Host to run the Express app on (usually localhost, 127.0.0.1, or 0.0.0.0)
 * @param path - Path to run the echoHandler on
 *
 * @example
 * ```
 * await serveDev(3001, 'localhost', '/api/chat');
 * ```
 */
declare const serveEchoAgentDev: (port: number, host?: string, path?: string) => Promise<void>;

export { serveEchoAgentDev, sseEchoHandler };
