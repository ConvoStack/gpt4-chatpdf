import { IAgent, IAgentMetadata } from "./agent";
export interface IAgentManager {
    getDefaultAgent(): IAgent;
    getDefaultAgentKey(): string;
    getAgent(key: string): IAgent;
    getAgentPrimer(key: string): string;
    getAgentDisplayName(key: string): string;
    getAgentAvatarUrl(key: string): string | null | undefined;
    getAgentHumanRole(key: string): string;
    getAgentAIRole(key: string): string;
    listAvailableAgents(): string[];
}
export interface IDefaultAgentManagerAgentsConfig {
    agent: IAgent;
    metadata: IAgentMetadata;
}
export declare class DefaultAgentManager implements IAgentManager {
    private agents;
    private defaultAgentKey;
    constructor(agents: {
        [key: string]: IDefaultAgentManagerAgentsConfig;
    }, defaultAgentKey: string);
    getDefaultAgentKey(): string;
    getDefaultAgent(): IAgent;
    getAgent(key: string): IAgent;
    getAgentDisplayName(key: string): string;
    getAgentPrimer(key: string): string;
    getAgentHumanRole(key: string): string;
    getAgentAIRole(key: string): string;
    listAvailableAgents(): string[];
    getAgentAvatarUrl(key: string): string | null;
}
//# sourceMappingURL=agent-manager.d.ts.map