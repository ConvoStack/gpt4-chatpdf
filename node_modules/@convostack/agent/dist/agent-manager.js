"use strict";
Object.defineProperty(exports, "__esModule", { value: true });
exports.DefaultAgentManager = void 0;
class DefaultAgentManager {
    constructor(agents, defaultAgentKey) {
        if (Object.keys(agents).length === 0) {
            throw new Error("No agents provided");
        }
        if (!defaultAgentKey || !agents[defaultAgentKey]) {
            throw new Error(`Default agent key '${defaultAgentKey}' is not provided or not found in available agents`);
        }
        for (const key in agents) {
            if (!key) {
                throw new Error("Agent key cannot be an empty string");
            }
        }
        this.agents = agents;
        this.defaultAgentKey = defaultAgentKey;
    }
    getDefaultAgentKey() {
        return this.defaultAgentKey;
    }
    getDefaultAgent() {
        return this.agents[this.defaultAgentKey].agent;
    }
    getAgent(key) {
        const agent = this.agents[key];
        if (!agent) {
            throw new Error(`Agent with key '${key}' not found`);
        }
        return agent.agent;
    }
    getAgentDisplayName(key) {
        return this.agents[key].metadata.displayName;
    }
    getAgentPrimer(key) {
        return this.agents[key].metadata.primer;
    }
    getAgentHumanRole(key) {
        return this.agents[key].metadata.humanRole;
    }
    getAgentAIRole(key) {
        return this.agents[key].metadata.aiRole;
    }
    listAvailableAgents() {
        return Object.keys(this.agents);
    }
    getAgentAvatarUrl(key) {
        return this.agents[key].metadata.avatarUrl;
    }
}
exports.DefaultAgentManager = DefaultAgentManager;
//# sourceMappingURL=agent-manager.js.map