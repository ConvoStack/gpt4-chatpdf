import { IMessage, IUser } from "@convostack/models";
export interface IAgent {
    reply(context: IAgentContext, callbacks?: IAgentCallbacks): Promise<IAgentResponse>;
}
export interface IAgentMetadata {
    displayName: string;
    primer: string;
    humanRole: string;
    aiRole: string;
    avatarUrl?: string;
}
export interface IAgentResponse {
    content: string;
    contentType?: IAgentResponseContentType;
}
export interface IAgentContext {
    getContextArgs(): any;
    getHistory(): IAgentContextHistory;
    getUser(): IAgentContextUser;
    getHumanMessage(): IAgentHumanMessage;
}
export interface IAgentCallbacks {
    onMessagePart(data: IAgentMessagePart): any;
}
export interface IAgentMessagePart {
    contentChunk: string;
    contentType?: IAgentResponseContentType;
}
export type IAgentResponseContentType = "markdown";
export type IAgentContextUser = IUser;
export type IAgentContextHistory = IMessage[];
export type IAgentHumanMessage = IMessage;
//# sourceMappingURL=agent.d.ts.map