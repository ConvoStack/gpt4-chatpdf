import { CustomStyling, UserData } from '../types';
export interface ConvoStackState {
    graphqlUrl: string;
    websocketUrl: string;
    workspaceId: string;
    accessToken: string;
    refreshToken: string;
    accessTokenExpiry: number | null;
    refreshTokenExpiry: number | null;
    activeConversationId: string | null;
    context: {
        [key: string]: string;
    } | null;
    defaultAgent: string | null;
    isWidgetWindowVisible: boolean;
    isConversationListVisible: boolean;
    styling: CustomStyling | null;
    userData: UserData | undefined;
    data: any;
    embedActiveConversationId: {
        [embedId: string]: string | null;
    };
    isEmbedConversationListVisible: {
        [embedId: string]: boolean;
    };
    embedData: {
        [embedId: string]: any;
    };
    embedDefaultAgent: {
        [embedId: string]: string | null;
    };
    createdFirstConversation: boolean;
}
export declare const setGraphqlUrl: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setGraphqlUrl">, setWebsocketlUrl: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setWebsocketlUrl">, setWorkspaceId: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setWorkspaceId">, setAccessToken: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setAccessToken">, setRefreshToken: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setRefreshToken">, setAccessTokenExpiry: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setAccessTokenExpiry">, setRefreshTokenExpiry: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setRefreshTokenExpiry">, setConversationId: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setConversationId">, setContext: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setContext">, setShowWidgetWindow: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setShowWidgetWindow">, setIsConversationListVisible: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setIsConversationListVisible">, setDefaultAgent: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setDefaultAgent">, setStyling: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setStyling">, setUserData: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setUserData">, setData: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setData">, setEmbedConversationId: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setEmbedConversationId">, setIsEmbedConversationListVisible: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setIsEmbedConversationListVisible">, setEmbedData: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setEmbedData">, setEmbedDefaultAgent: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setEmbedDefaultAgent">, setCreatedFirstConversation: import("@reduxjs/toolkit").ActionCreatorWithPayload<any, "conversation/setCreatedFirstConversation">;
declare const _default: import("redux").Reducer<ConvoStackState>;
export default _default;
