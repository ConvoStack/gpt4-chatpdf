"use strict";
var __defProp = Object.defineProperty;
var __getOwnPropDesc = Object.getOwnPropertyDescriptor;
var __getOwnPropNames = Object.getOwnPropertyNames;
var __hasOwnProp = Object.prototype.hasOwnProperty;
var __export = (target, all) => {
  for (var name in all)
    __defProp(target, name, { get: all[name], enumerable: true });
};
var __copyProps = (to, from, except, desc) => {
  if (from && typeof from === "object" || typeof from === "function") {
    for (let key of __getOwnPropNames(from))
      if (!__hasOwnProp.call(to, key) && key !== except)
        __defProp(to, key, { get: () => from[key], enumerable: !(desc = __getOwnPropDesc(from, key)) || desc.enumerable });
  }
  return to;
};
var __toCommonJS = (mod) => __copyProps(__defProp({}, "__esModule", { value: true }), mod);

// src/index.ts
var src_exports = {};
__export(src_exports, {
  LangchainAgentWrapper: () => LangchainAgentWrapper
});
module.exports = __toCommonJS(src_exports);
var LangchainAgentWrapper = class {
  constructor(agentOrChain, chainValues, userInputKey, callbacks) {
    this.agentOrChain = agentOrChain;
    this.chainValues = chainValues;
    this.userInputKey = userInputKey;
    this.callbacks = callbacks;
  }
  async reply(context) {
    let humanMessage = context.getHumanMessage().content;
    let res;
    if (this.chainValues && this.userInputKey) {
      this.chainValues[this.userInputKey] = humanMessage;
      const response = await this.agentOrChain.call(
        this.chainValues,
        this.callbacks
      );
      res = response.text;
    } else {
      res = await this.agentOrChain.run(humanMessage);
    }
    return {
      content: res,
      contentType: "markdown"
    };
  }
};
// Annotate the CommonJS export names for ESM import in node:
0 && (module.exports = {
  LangchainAgentWrapper
});
